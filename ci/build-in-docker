#!/bin/bash

#
# Builds container image and extracts specific artifact outside
# Notice, it does not use volume mounts, and this is on purpose.
# This way it enforces a requirement that the image
# is self sufficient.
#
# usage: build-in-docker <artifact-source> <artifact-destination>
#

set -o nounset -o errexit

# takes input to this script
PWD=$(pwd)
prefix=$(basename "$PWD")
src_path=$1
dst_path=$2
timestamp=$(date +%s)

# combine image/container names
base_container=${prefix}-container
image=${prefix}-${timestamp}-img
container=${prefix}-${timestamp}-cont

# Builds here (if fails then no image is here = nothing to clean up)
docker build --tag ${image} --file Dockerfile .

# Prevent CI workspace cache
rm -fr ${dst_path}

# unlikely to fail so no error handling needed 
docker create --name ${container} ${image}

# This can fail due to misconf, and needs cleanup
if docker cp ${container}:${src_path} ${dst_path}; then
  echo "ðŸ’š File copied successfully"
else
  echo "ðŸ’” Error copying file"
  exit_status=$?
  docker rm ${container}
  docker rmi ${image}
  exit $exit_status
fi

docker rm ${container}
docker rmi ${image}
